{
  "name": "LinkedIn Article Generator - Solution Finale",
  "nodes": [
    {
      "parameters": {},
      "id": "trigger-manual",
      "name": "üöÄ D√©clencheur Manuel",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "507bd4507b644b78b44d4ceeb809f1e0",
          "mode": "id"
        },
        "filterType": "manual",
        "conditions": {
          "conditions": [
            {
              "key": "Statut",
              "condition": "equals",
              "value": "Non trait√©"
            }
          ]
        },
        "limit": 1,
        "options": {}
      },
      "id": "notion-get-ideas",
      "name": "üì• R√©cup√©rer Id√©e Non Trait√©e",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [450, 300]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Effectue une recherche approfondie sur le sujet suivant pour un article LinkedIn professionnel:\n\nTitre: {{ $json.properties?.['Titre']?.title?.[0]?.plain_text || 'Sans titre' }}\n\nContexte: {{ $json.properties?.['Contexte et sources']?.rich_text?.[0]?.plain_text || 'Pas de contexte' }}\n\nRecherche les derni√®res actualit√©s, statistiques, √©tudes de cas et innovations sur ce sujet. Fournis des donn√©es concr√®tes et v√©rifiables.",
        "options": {
          "systemMessage": "Tu es un expert en recherche d'informations. Fournis des informations actuelles, des statistiques et des exemples concrets."
        }
      },
      "id": "perplexity-agent",
      "name": "üîç Agent Perplexity - Recherche",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [650, 300]
    },
    {
      "parameters": {
        "model": "perplexity/sonar-pro",
        "options": {}
      },
      "id": "perplexity-model",
      "name": "Perplexity Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [650, 500]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=R√©dige un article LinkedIn professionnel bas√© sur les informations suivantes:\n\nSujet: {{ $('üì• R√©cup√©rer Id√©e Non Trait√©e').item.json.properties?.['Titre']?.title?.[0]?.plain_text || 'Sans titre' }}\n\nNotes personnelles: {{ $('üì• R√©cup√©rer Id√©e Non Trait√©e').item.json.properties?.['Notes personnelles']?.rich_text?.[0]?.plain_text || '' }}\n\nQuestions √† adresser: {{ $('üì• R√©cup√©rer Id√©e Non Trait√©e').item.json.properties?.['Questions √† adresser']?.rich_text?.[0]?.plain_text || '' }}\n\nRecherche effectu√©e:\n{{ $json.output }}\n\nConsignes:\n- Article de 800-1200 mots\n- Structure avec accroche forte\n- D√©veloppement avec exemples concrets\n- Insights pratiques et actionnables\n- Conclusion avec appel √† l'action\n- Ton professionnel mais accessible\n\nR√©ponds UNIQUEMENT avec le texte de l'article.",
        "options": {
          "systemMessage": "Tu es un expert en r√©daction d'articles LinkedIn professionnels. Tu r√©diges des articles engageants avec une structure claire et des insights pratiques."
        }
      },
      "id": "claude-agent",
      "name": "‚úçÔ∏è Agent Claude - R√©daction",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [850, 300]
    },
    {
      "parameters": {
        "model": "claude-3-5-sonnet-20241022",
        "options": {}
      },
      "id": "claude-model",
      "name": "Claude Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.2,
      "position": [850, 500]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=G√©n√®re exactement 10 hashtags pertinents pour cet article LinkedIn:\n\n{{ $json.output }}\n\nRetourne uniquement les hashtags s√©par√©s par des espaces, sans num√©rotation ni autre texte.",
        "options": {
          "systemMessage": "Tu es un expert en marketing LinkedIn. Tu g√©n√®res des hashtags optimis√©s pour maximiser la visibilit√© des articles."
        }
      },
      "id": "gpt-agent",
      "name": "üè∑Ô∏è Agent GPT - Hashtags",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [1050, 300]
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4",
          "mode": "list"
        },
        "options": {}
      },
      "id": "openai-model",
      "name": "OpenAI Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [1050, 500]
    },
    {
      "parameters": {
        "functionCode": "// Validation et formatage des donn√©es pour Notion\nconst inputData = items[0].json;\nconst properties = {};\n\n// Titre (obligatoire, type: title)\nif ($('üì• R√©cup√©rer Id√©e Non Trait√©e').item.json.properties?.['Titre']?.title?.[0]?.plain_text) {\n  properties.Titre = {\n    title: [{\n      text: {\n        content: $('üì• R√©cup√©rer Id√©e Non Trait√©e').item.json.properties['Titre'].title[0].plain_text.substring(0, 100)\n      }\n    }]\n  };\n} else {\n  properties.Titre = {\n    title: [{\n      text: { content: \"Article g√©n√©r√© automatiquement\" }\n    }]\n  };\n}\n\n// Contenu article (type: rich_text)\nif ($('‚úçÔ∏è Agent Claude - R√©daction').item.json.output) {\n  properties[\"Contenu article\"] = {\n    rich_text: [{\n      text: {\n        content: $('‚úçÔ∏è Agent Claude - R√©daction').item.json.output.substring(0, 2000)\n      }\n    }]\n  };\n}\n\n// Hashtags (type: rich_text ou multi_select - on utilise rich_text par s√©curit√©)\nif (inputData.output) {\n  properties.Hashtags = {\n    rich_text: [{\n      text: {\n        content: inputData.output\n      }\n    }]\n  };\n}\n\n// Post LinkedIn complet (type: rich_text)\nconst articleContent = $('‚úçÔ∏è Agent Claude - R√©daction').item.json.output || '';\nconst hashtags = inputData.output || '';\nproperties[\"Post LinkedIn complet\"] = {\n  rich_text: [{\n    text: {\n      content: (articleContent.substring(0, 1500) + '\\n\\n' + hashtags).substring(0, 2000)\n    }\n  }]\n};\n\n// Public cible (type: select - CORRIG√â)\nproperties[\"Public cible\"] = {\n  select: {\n    name: \"Professionnels et d√©cideurs\"\n  }\n};\n\n// Statistiques cl√©s (type: rich_text)\nproperties[\"Statistiques cl√©s\"] = {\n  rich_text: [{\n    text: {\n      content: \"Article g√©n√©r√© via n8n le \" + new Date().toLocaleDateString('fr-FR')\n    }\n  }]\n};\n\n// Date g√©n√©ration (type: date) - avec gestion d'erreur\ntry {\n  properties[\"Date g√©n√©ration\"] = {\n    date: {\n      start: new Date().toISOString()\n    }\n  };\n} catch (error) {\n  // Si erreur de date, on l'omet\n  console.log('Erreur date:', error);\n}\n\n// Source id√©e (type: relation) - avec validation UUID\nconst sourceId = $('üì• R√©cup√©rer Id√©e Non Trait√©e').item.json.id;\nconst uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n\nif (sourceId && uuidRegex.test(sourceId.replace(/-/g, ''))) {\n  // Reformater l'ID si n√©cessaire\n  const formattedId = sourceId.replace(/-/g, '').replace(\n    /(.{8})(.{4})(.{4})(.{4})(.{12})/,\n    '$1-$2-$3-$4-$5'\n  );\n  \n  properties[\"Source id√©e\"] = {\n    relation: [{\n      id: formattedId\n    }]\n  };\n}\n\nreturn [{\n  json: {\n    parent: {\n      database_id: \"9b915f4f6bae479f9326ff2cfdabadd3\"\n    },\n    properties: properties\n  }\n}];"
      },
      "id": "format-validation",
      "name": "üîß Validation et Formatage",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1250, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.notion.com/v1/pages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "notionApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Notion-Version",
              "value": "2022-06-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json }}",
        "options": {}
      },
      "id": "http-notion-create",
      "name": "üíæ Cr√©er Article dans Notion",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1450, 300]
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "=https://api.notion.com/v1/pages/{{ $('üì• R√©cup√©rer Id√©e Non Trait√©e').item.json.id }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "notionApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Notion-Version",
              "value": "2022-06-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"properties\": {\n    \"Statut\": {\n      \"select\": {\n        \"name\": \"Trait√©\"\n      }\n    }\n  }\n}",
        "options": {}
      },
      "id": "http-notion-update",
      "name": "‚úÖ Marquer Id√©e Trait√©e",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1650, 300]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "success",
              "name": "success",
              "value": "=‚ú® Workflow termin√© avec succ√®s!\n\nüìù Article cr√©√©: {{ $('üíæ Cr√©er Article dans Notion').item.json.properties?.['Titre']?.title?.[0]?.plain_text }}\n‚úÖ Id√©e marqu√©e comme trait√©e\nüîó URL de l'article: {{ $('üíæ Cr√©er Article dans Notion').item.json.url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "success-message",
      "name": "‚ú® Message de succ√®s",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [1850, 300]
    }
  ],
  "connections": {
    "üöÄ D√©clencheur Manuel": {
      "main": [[{"node": "üì• R√©cup√©rer Id√©e Non Trait√©e", "type": "main", "index": 0}]]
    },
    "üì• R√©cup√©rer Id√©e Non Trait√©e": {
      "main": [[{"node": "üîç Agent Perplexity - Recherche", "type": "main", "index": 0}]]
    },
    "üîç Agent Perplexity - Recherche": {
      "main": [[{"node": "‚úçÔ∏è Agent Claude - R√©daction", "type": "main", "index": 0}]]
    },
    "‚úçÔ∏è Agent Claude - R√©daction": {
      "main": [[{"node": "üè∑Ô∏è Agent GPT - Hashtags", "type": "main", "index": 0}]]
    },
    "üè∑Ô∏è Agent GPT - Hashtags": {
      "main": [[{"node": "üîß Validation et Formatage", "type": "main", "index": 0}]]
    },
    "üîß Validation et Formatage": {
      "main": [[{"node": "üíæ Cr√©er Article dans Notion", "type": "main", "index": 0}]]
    },
    "üíæ Cr√©er Article dans Notion": {
      "main": [[{"node": "‚úÖ Marquer Id√©e Trait√©e", "type": "main", "index": 0}]]
    },
    "‚úÖ Marquer Id√©e Trait√©e": {
      "main": [[{"node": "‚ú® Message de succ√®s", "type": "main", "index": 0}]]
    },
    "Perplexity Model": {
      "ai_languageModel": [[{"node": "üîç Agent Perplexity - Recherche", "type": "ai_languageModel", "index": 0}]]
    },
    "Claude Model": {
      "ai_languageModel": [[{"node": "‚úçÔ∏è Agent Claude - R√©daction", "type": "ai_languageModel", "index": 0}]]
    },
    "OpenAI Model": {
      "ai_languageModel": [[{"node": "üè∑Ô∏è Agent GPT - Hashtags", "type": "ai_languageModel", "index": 0}]]
    }
  },
  "settings": {"executionOrder": "v1"}
}