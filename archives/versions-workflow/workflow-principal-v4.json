{
  "name": "hartran-linkedin-article-corrige",
  "nodes": [
    {
      "parameters": {},
      "id": "trigger-manual",
      "name": "üöÄ D√©clencheur Manuel",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [256, 304]
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "507bd4507b644b78b44d4ceeb809f1e0",
          "mode": "id"
        },
        "limit": 1,
        "filterType": "manual",
        "options": {}
      },
      "id": "notion-get-ideas",
      "name": "üì• R√©cup√©rer Id√©e Non Trait√©e",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [480, 304],
      "credentials": {
        "notionApi": {
          "id": "aH0S5x4M973O80uj",
          "name": "Notion LinkedIn"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Pr√©parer et d√©boguer les donn√©es de l'id√©e Notion\nconst notionItem = $json;\n\nconsole.log('=== DONN√âES RE√áUES DE NOTION ===');\nconsole.log(JSON.stringify(notionItem, null, 2));\n\n// Extraire les donn√©es importantes\nlet titre = 'Article sur la web analyse et data';\nlet sources = '';\nlet notes = '';\nlet angle = '';\nlet questions = '';\nlet pourquoi = '';\nlet stats = '';\nlet citations = '';\n\n// Essayer diff√©rentes fa√ßons d'acc√©der aux propri√©t√©s\nif (notionItem?.properties) {\n  // Titre\n  titre = notionItem.properties?.title?.[0]?.plain_text || \n          notionItem.properties?.['Titre/Id√©e principale']?.title?.[0]?.plain_text ||\n          notionItem.properties?.Name?.title?.[0]?.plain_text ||\n          'Article sur la web analyse et data';\n  \n  // Sources\n  sources = notionItem.properties?.['Sources/URLs']?.rich_text?.[0]?.plain_text || '';\n  \n  // Notes personnelles\n  notes = notionItem.properties?.['Notes personnelles']?.rich_text?.[0]?.plain_text || '';\n  \n  // Angle personnel\n  angle = notionItem.properties?.['Angle personnel']?.rich_text?.[0]?.plain_text || '';\n  \n  // Questions\n  questions = notionItem.properties?.['Questions √† adresser']?.rich_text?.[0]?.plain_text || '';\n  \n  // Pourquoi maintenant\n  pourquoi = notionItem.properties?.['Pourquoi maintenant?']?.rich_text?.[0]?.plain_text || '';\n  \n  // Statistiques\n  stats = notionItem.properties?.['Data/Statistiques']?.rich_text?.[0]?.plain_text || '';\n  \n  // Citations\n  citations = notionItem.properties?.['Citations cl√©s']?.rich_text?.[0]?.plain_text || '';\n}\n\nconsole.log('=== DONN√âES EXTRAITES ===');\nconsole.log('Titre:', titre);\nconsole.log('Sources:', sources);\nconsole.log('Notes:', notes);\nconsole.log('Angle:', angle);\nconsole.log('Questions:', questions);\n\n// Retourner toutes les donn√©es + les donn√©es format√©es\nreturn {\n  ...notionItem,\n  extracted: {\n    titre,\n    sources,\n    notes,\n    angle,\n    questions,\n    pourquoi,\n    stats,\n    citations\n  }\n};"
      },
      "id": "prepare-notion-data",
      "name": "üîç Pr√©parer donn√©es id√©e",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [600, 304]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Effectue une recherche approfondie sur le sujet suivant pour un article LinkedIn professionnel:\n\nTitre: {{ $json.extracted?.titre || 'Article sur la web analyse et data' }}\n\nContexte et sources: {{ $json.extracted?.sources || 'Non fourni' }}\n\nNotes personnelles: {{ $json.extracted?.notes || 'Expert en web analyse et data analyse' }}\n\nAngle personnel: {{ $json.extracted?.angle || '' }}\n\nQuestions √† adresser: {{ $json.extracted?.questions || '' }}\n\nPourquoi maintenant: {{ $json.extracted?.pourquoi || '' }}\n\nData/Statistiques: {{ $json.extracted?.stats || '' }}\n\nCitations cl√©s: {{ $json.extracted?.citations || '' }}\n\nIMPORTANT: Le sujet est R√âEL et concret. Effectue une recherche approfondie sur ce sujet pr√©cis. Ne dis pas qu'il manque des informations.\n\nRecherche les derni√®res actualit√©s, statistiques, √©tudes de cas, et innovations sur ce sujet. Fournis des donn√©es concr√®tes et v√©rifiables.",
        "options": {
          "systemMessage": "Tu es un expert en recherche d'informations sur les sujets de web analyse et data analyse. Tu dois effectuer une recherche approfondie et fournir des informations actuelles, des statistiques, des tendances et des exemples concrets. Utilise tes capacit√©s de recherche web pour trouver les informations les plus r√©centes et pertinentes."
        }
      },
      "id": "perplexity-agent",
      "name": "üîç Agent Recherche Perplexity",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [704, 400]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=R√©dige un article LinkedIn professionnel de 800-1200 mots bas√© sur les informations suivantes:\n\nSujet principal: {{ $('üîç Pr√©parer donn√©es id√©e').first().json.extracted?.titre || 'Article sur la web analyse et data' }}\n\nNotes personnelles: {{ $('üîç Pr√©parer donn√©es id√©e').first().json.extracted?.notes || '' }}\n\nAngle personnel: {{ $('üîç Pr√©parer donn√©es id√©e').first().json.extracted?.angle || '' }}\n\nQuestions √† adresser: {{ $('üîç Pr√©parer donn√©es id√©e').first().json.extracted?.questions || '' }}\n\nPourquoi maintenant: {{ $('üîç Pr√©parer donn√©es id√©e').first().json.extracted?.pourquoi || '' }}\n\nData/Statistiques √† int√©grer: {{ $('üîç Pr√©parer donn√©es id√©e').first().json.extracted?.stats || '' }}\n\nCitations cl√©s: {{ $('üîç Pr√©parer donn√©es id√©e').first().json.extracted?.citations || '' }}\n\nRecherche effectu√©e:\n{{ $json.output }}\n\nIMPORTANT: Tu DOIS r√©diger un article complet sur le sujet donn√©. Ne dis JAMAIS qu'il manque des informations. Utilise toutes les donn√©es fournies pour cr√©er un article pertinent et engageant.\n\nConsignes:\n- Article de 800-1200 mots COMPLET (pas de message d'erreur)\n- Structure avec une accroche forte sur le sujet donn√©\n- D√©veloppement avec exemples concrets tir√©s de la recherche\n- Insights pratiques et actionnables\n- Conclusion avec appel √† l'action\n- Ton professionnel mais accessible\n- Int√®gre TOUS les √©l√©ments fournis (angle personnel, questions, statistiques, citations)\n- Le sujet est TOUJOURS li√© √† la web analyse, data analyse ou l'IA\n\nNE JAMAIS r√©pondre qu'il manque des informations. TOUJOURS cr√©er un article complet.",
        "options": {
          "systemMessage": "Tu es un expert en r√©daction d'articles LinkedIn professionnels sur des sujets de web analyse et data analyse. Tu r√©diges des articles engageants avec une structure claire et des insights pratiques. Tu adaptes ton angle √©ditorial en fonction des notes personnelles et questions fournies."
        }
      },
      "id": "claude-agent",
      "name": "‚úçÔ∏è Agent R√©daction Claude",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [1056, 400]
    },
    {
      "parameters": {
        "model": "claude-3-opus-20240229",
        "options": {}
      },
      "id": "claude-model",
      "name": "Claude Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.2,
      "position": [992, 608],
      "credentials": {
        "anthropicApi": {
          "id": "Ylmsz8Ymq9adIJs0",
          "name": "Anthropic account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=G√©n√®re exactement 10 hashtags pertinents pour cet article LinkedIn:\n\n{{ $json.output }}\n\nRetourne uniquement les hashtags s√©par√©s par des espaces, sans num√©rotation ni autre texte. M√©lange hashtags populaires et sp√©cialis√©s dans le domaine de l'analytics et du data.",
        "options": {
          "systemMessage": "Tu es un expert en marketing LinkedIn. Tu g√©n√®res des hashtags optimis√©s pour maximiser la visibilit√© des articles."
        }
      },
      "id": "openai-agent",
      "name": "üè∑Ô∏è Agent Hashtags GPT",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [1408, 400]
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "chatgpt-4o-latest",
          "mode": "list",
          "cachedResultName": "chatgpt-4o-latest"
        },
        "options": {}
      },
      "id": "openai-model",
      "name": "OpenAI Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [1480, 624],
      "credentials": {
        "openAiApi": {
          "id": "W3z11iU8VRrweFEt",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Pr√©paration des donn√©es pour la sauvegarde Notion - VERSION CORRIG√âE\n\n// D'abord, r√©cup√©rer les donn√©es du n≈ìud Notion\n// Le n≈ìud getAll retourne un array, on prend le premier √©l√©ment\nconst notionItem = $('üì• R√©cup√©rer Id√©e Non Trait√©e').first().json;\n\n// DEBUG : Afficher la structure pour comprendre\nconsole.log('=== STRUCTURE NOTION ITEM ===');\nconsole.log('Cl√©s disponibles:', Object.keys(notionItem || {}));\nif (notionItem?.properties) {\n  console.log('Propri√©t√©s disponibles:', Object.keys(notionItem.properties));\n}\n\n// V√©rifier si les donn√©es existent et extraire le titre avec gestion d'erreur\nlet titre = \"Sans titre\";\ntry {\n  // Essayer diff√©rentes fa√ßons d'acc√©der au titre\n  if (notionItem?.properties?.title) {\n    // Si c'est une propri√©t√© title standard\n    titre = notionItem.properties.title[0]?.plain_text || notionItem.properties.title[0]?.text?.content || \"Sans titre\";\n  } else if (notionItem?.properties?.['Titre/Id√©e principale']) {\n    // Si c'est avec le nom complet\n    titre = notionItem.properties['Titre/Id√©e principale'].title[0]?.plain_text || \n            notionItem.properties['Titre/Id√©e principale'].title[0]?.text?.content || \"Sans titre\";\n  } else if (notionItem?.properties?.Name) {\n    // Ou si c'est Name\n    titre = notionItem.properties.Name.title[0]?.plain_text || \"Sans titre\";\n  }\n} catch (e) {\n  console.log(\"Erreur lors de l'extraction du titre:\", e.message);\n}\n\nconsole.log('Titre extrait:', titre);\n\n// R√©cup√©rer l'ID de l'id√©e\nconst ideaId = notionItem?.id || \"\";\n\n// R√©cup√©rer le contenu de l'article depuis Claude\nlet contenuArticle = \"\";\ntry {\n  contenuArticle = $('‚úçÔ∏è Agent R√©daction Claude').first().json.output || \"\";\n} catch (e) {\n  console.log(\"Erreur lors de la r√©cup√©ration du contenu Claude:\", e.message);\n}\n\n// R√©cup√©rer les hashtags depuis GPT\nlet hashtags = \"\";\ntry {\n  hashtags = $('üè∑Ô∏è Agent Hashtags GPT').first().json.output || \"\";\n} catch (e) {\n  console.log(\"Erreur lors de la r√©cup√©ration des hashtags:\", e.message);\n}\n\n// Extraction des statistiques cl√©s du contenu\nconst stats = contenuArticle.match(/\\d+[%‚Ç¨$]?|\\d+\\s*(millions?|milliards?|%)/gi) || [];\nconst statistiquesCles = stats.join(', ');\n\n// Compilation du post LinkedIn complet\nconst postLinkedInComplet = `${contenuArticle}\\n\\n${hashtags}`;\n\n// Limitation √† 2000 caract√®res pour les rich_text\nconst contenuLimite = contenuArticle.substring(0, 2000);\nconst postLimite = postLinkedInComplet.substring(0, 2000);\n\n// Log pour d√©bogage\nconsole.log(\"Donn√©es pr√©par√©es:\");\nconsole.log(\"- Titre:\", titre);\nconsole.log(\"- ID de l'id√©e:\", ideaId);\nconsole.log(\"- Longueur contenu:\", contenuArticle.length);\nconsole.log(\"- Hashtags:\", hashtags);\nconsole.log(\"- Statistiques:\", statistiquesCles);\n\n// Retourner les donn√©es format√©es\nreturn {\n  titre: titre,\n  contenuArticle: contenuLimite,\n  hashtags: hashtags,\n  postLinkedInComplet: postLimite,\n  statistiquesCles: statistiquesCles.substring(0, 2000),\n  ideaId: ideaId,\n  dateGeneration: new Date().toISOString()\n};"
      },
      "id": "prepare-data",
      "name": "üìã Pr√©parer donn√©es finales",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1760, 400]
    },
    {
      "parameters": {
        "jsCode": "// Pr√©paration du JSON pour l'API Notion\nconst notionPayload = {\n  parent: {\n    database_id: \"9b915f4f6bae479f9326ff2cfdabadd3\"\n  },\n  properties: {\n    \"Titre\": {\n      title: [\n        {\n          text: {\n            content: $json.titre || \"Sans titre\"\n          }\n        }\n      ]\n    },\n    \"Contenu article\": {\n      rich_text: [\n        {\n          text: {\n            content: $json.contenuArticle || \"\"\n          }\n        }\n      ]\n    },\n    \"Hashtags\": {\n      rich_text: [\n        {\n          text: {\n            content: $json.hashtags || \"\"\n          }\n        }\n      ]\n    },\n    \"Post LinkedIn complet\": {\n      rich_text: [\n        {\n          text: {\n            content: $json.postLinkedInComplet || \"\"\n          }\n        }\n      ]\n    },\n    \"Public cible\": {\n      select: {\n        name: \"Professionnels et d√©cideurs\"\n      }\n    },\n    \"Statistiques cl√©s\": {\n      rich_text: [\n        {\n          text: {\n            content: $json.statistiquesCles || \"\"\n          }\n        }\n      ]\n    }\n  }\n};\n\n// Retourner le payload avec toutes les autres donn√©es\nreturn {\n  ...($json || {}),\n  notionPayload: notionPayload\n};"
      },
      "id": "prepare-notion-payload",
      "name": "üîß Pr√©parer payload Notion",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1900, 400]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.notion.com/v1/pages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "notionApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Notion-Version",
              "value": "2022-06-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.notionPayload }}",
        "options": {}
      },
      "id": "notion-create-article",
      "name": "üíæ Cr√©er Article dans Notion",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [2100, 400],
      "credentials": {
        "notionApi": {
          "id": "aH0S5x4M973O80uj",
          "name": "Notion LinkedIn"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Extraction des donn√©es de l'article cr√©√©\nreturn {\n  articleId: $json.id,\n  articleUrl: $json.url,\n  createdTime: $json.created_time,\n  titre: $json.properties?.Titre?.title?.[0]?.text?.content || \"Sans titre\",\n  ideaId: $('üìã Pr√©parer donn√©es finales').first().json.ideaId\n};"
      },
      "id": "extract-article-data",
      "name": "üìä Extraire donn√©es article",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2272, 400]
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "={{ `https://api.notion.com/v1/pages/${$('üì• R√©cup√©rer Id√©e Non Trait√©e').first().json.id}` }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "notionApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Notion-Version",
              "value": "2022-06-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"properties\": {\n    \"Trait√©\": {\n      \"checkbox\": true\n    }\n  }\n}",
        "options": {}
      },
      "id": "notion-update-idea",
      "name": "‚úÖ Marquer Id√©e Trait√©e",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [2528, 400],
      "credentials": {
        "notionApi": {
          "id": "aH0S5x4M973O80uj",
          "name": "Notion LinkedIn"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "message",
              "value": "=‚úÖ Article LinkedIn g√©n√©r√© avec succ√®s!\n\nüìù Titre: {{ $('üìä Extraire donn√©es article').first().json.titre }}\nüìÑ Article ID: {{ $('üìä Extraire donn√©es article').first().json.articleId }}\nüîó URL Notion: {{ $('üìä Extraire donn√©es article').first().json.articleUrl }}\n‚è∞ Cr√©√© le: {{ $('üìä Extraire donn√©es article').first().json.createdTime }}\n\n‚úîÔ∏è L'id√©e a √©t√© marqu√©e comme trait√©e."
            }
          ]
        },
        "options": {}
      },
      "id": "success-message",
      "name": "‚ú® Message de succ√®s",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [2784, 400]
    },
    {
      "parameters": {
        "model": "perplexity/sonar-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [640, 576],
      "id": "8455064c-cbd7-4f0d-8da7-284d0cd6b3ed",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "xLdMbYh4lyLsgJJA",
          "name": "OpenRouter account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "üöÄ D√©clencheur Manuel": {
      "main": [
        [
          {
            "node": "üì• R√©cup√©rer Id√©e Non Trait√©e",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üì• R√©cup√©rer Id√©e Non Trait√©e": {
      "main": [
        [
          {
            "node": "üîç Pr√©parer donn√©es id√©e",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîç Pr√©parer donn√©es id√©e": {
      "main": [
        [
          {
            "node": "üîç Agent Recherche Perplexity",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîç Agent Recherche Perplexity": {
      "main": [
        [
          {
            "node": "‚úçÔ∏è Agent R√©daction Claude",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚úçÔ∏è Agent R√©daction Claude": {
      "main": [
        [
          {
            "node": "üè∑Ô∏è Agent Hashtags GPT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Claude Model": {
      "ai_languageModel": [
        [
          {
            "node": "‚úçÔ∏è Agent R√©daction Claude",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "üè∑Ô∏è Agent Hashtags GPT": {
      "main": [
        [
          {
            "node": "üìã Pr√©parer donn√©es finales",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìã Pr√©parer donn√©es finales": {
      "main": [
        [
          {
            "node": "üîß Pr√©parer payload Notion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîß Pr√©parer payload Notion": {
      "main": [
        [
          {
            "node": "üíæ Cr√©er Article dans Notion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üíæ Cr√©er Article dans Notion": {
      "main": [
        [
          {
            "node": "üìä Extraire donn√©es article",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìä Extraire donn√©es article": {
      "main": [
        [
          {
            "node": "‚úÖ Marquer Id√©e Trait√©e",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚úÖ Marquer Id√©e Trait√©e": {
      "main": [
        [
          {
            "node": "‚ú® Message de succ√®s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Model": {
      "ai_languageModel": [
        [
          {
            "node": "üè∑Ô∏è Agent Hashtags GPT",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "üîç Agent Recherche Perplexity",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "corrige-v1",
  "meta": {
    "instanceId": "403566a9aee191faa03a05967266a85d00d44980ffb18ca114571275711151b4"
  },
  "id": "8fRjPcH3dc54VPPX",
  "tags": []
}
