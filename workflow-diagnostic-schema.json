{
  "name": "Diagnostic - R√©cup√©rer Sch√©ma Base Id√©es",
  "nodes": [
    {
      "parameters": {},
      "id": "trigger-manual",
      "name": "üöÄ D√©clencheur Manuel",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "https://api.notion.com/v1/databases/507bd4507b644b78b44d4ceeb809f1e0",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "notionApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Notion-Version",
              "value": "2022-06-28"
            }
          ]
        },
        "options": {}
      },
      "id": "get-schema",
      "name": "üîç R√©cup√©rer Sch√©ma Base Id√©es",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [450, 300]
    },
    {
      "parameters": {
        "functionCode": "// Analyse du sch√©ma pour trouver la propri√©t√© de statut\nconst schema = items[0].json;\nconst properties = schema.properties;\n\n// Extraction de tous les noms de propri√©t√©s\nconst allPropertyNames = Object.keys(properties);\n\n// Recherche des propri√©t√©s potentiellement li√©es au statut\nconst statusRelatedProperties = allPropertyNames.filter(name => {\n  const lowerName = name.toLowerCase();\n  return lowerName.includes('status') || \n         lowerName.includes('statut') ||\n         lowerName.includes('√©tat') ||\n         lowerName.includes('etat') ||\n         lowerName.includes('state');\n});\n\n// Analyse d√©taill√©e\nconst detailedProperties = {};\nfor (const propName of allPropertyNames) {\n  const prop = properties[propName];\n  detailedProperties[propName] = {\n    type: prop.type,\n    options: prop.select?.options || prop.status?.options || prop.multi_select?.options || []\n  };\n}\n\nconsole.log('Toutes les propri√©t√©s:', allPropertyNames);\nconsole.log('Propri√©t√©s de statut trouv√©es:', statusRelatedProperties);\n\nreturn [{\n  json: {\n    all_properties: allPropertyNames,\n    status_properties: statusRelatedProperties,\n    detailed_properties: detailedProperties,\n    raw_schema: properties\n  }\n}];"
      },
      "id": "analyze-schema",
      "name": "üìä Analyser le Sch√©ma",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [650, 300]
    }
  ],
  "connections": {
    "üöÄ D√©clencheur Manuel": {
      "main": [[{"node": "üîç R√©cup√©rer Sch√©ma Base Id√©es", "type": "main", "index": 0}]]
    },
    "üîç R√©cup√©rer Sch√©ma Base Id√©es": {
      "main": [[{"node": "üìä Analyser le Sch√©ma", "type": "main", "index": 0}]]
    }
  },
  "settings": {"executionOrder": "v1"}
}